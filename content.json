{"pages":[{"title":"404","text":"","path":"404/index.html","date":"01-05","excerpt":""},{"title":"categories","text":"","path":"categories/index.html","date":"01-05","excerpt":""},{"title":"about","text":"","path":"about/index.html","date":"01-05","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"01-05","excerpt":""},{"title":"tags","text":"","path":"tags/index.html","date":"01-05","excerpt":""}],"posts":[{"title":"proxifier注册码以及配合shadowsocks上网","text":"proxifier注册码以及配合shadowsocks上网 由于shadowsocks使用的是sockets5代理，一般情况下只有浏览器支持，可以实现科学上网。但很多用户希望自己的应用软件，像outlook或游戏之类的软件也实现科学上网。这就需要proxifier的配合。 软件可以在官网下载，https://www.proxifier.com或，http://www.onlinedown.net/soft/971579.htm Proxifier基本简介 Proxifier 是一款功能非常强大的socks5客户端，支持64位系统，支持Xp，Vista，Win7，支持socks4，socks5，http代理协议，支持TCP，UDP协议，可以指定端口，指定IP，指定程序等运行模式，兼容性非常好。 Proxifier 解决了这些问题和所有限制，让您有机会不受任何限制使用你喜爱的软件。 此外，它让你获得了额外的网络安全控制，创建代理隧道，并添加使用更多网络功能的权力。 Proxifier功能介绍 1、Proxifier 绕过防火墙的限制。 2、灵活的代理规则，对于主机名和应用程序名称可使用通配符。 3、通过隐藏您的 IP 地址的获得安全隐私。 4、查看当前网络活动的实时信息(连接,主机,时间,带宽使用等)。 5、Proxifier 维护日志文件和流量转储。 6、获得详细的网络错误报告。 Proxifier安装教程 1.在本站下载好Proxifier 数据包后，直接解压用鼠标双击打开进入安装向导，点击下一步2.选择安装位置，默认路径为“C:Program Files (x86)Proxifier”3.在创建桌面快捷方式前面勾上，不然等软件安装好后在你的电脑桌面找不到Proxifier 软件哦4.等待安装完成即可 Proxifier使用方法***一、设置代理1、在安装Proxifier；2、在Proxifier的“配置文件”菜单上，单击“代理服务器”选项；3、在弹出的“代理服务器”对话框中，单击“添加”按钮；4、在弹出的“代理服务器”对话框中，输入代理服务器的IP地址和SOCKS端口，选中“SOCKS版本5”单选按钮，再单击“确定”按钮；5、在Proxifier “代理服务器”对话框中，单击“检查”按钮；6、在弹出“代理检查器”对话框中，将显示测试信息。二、代理规则1、在Proxifier的“配置文件”菜单上，单击“代理规则”选项； 此软件为收费软件，这里提供两个注册码, 软件分为Standard Edition和Portable Edition版本，注册码不通用，注册用户名任意。123L6Z8A-XY2J4-BTZ3P-ZZ7DF-A2Q9C（Portable Edition）5EZ8G-C3WL5-B56YG-SCXM9-6QZAP（Standard Edition）P427L-9Y552-5433E-8DSR3-58Z68（MAC） 或者： 用户名：www.3322.cc 注册码（秘钥）：（任选其一） 1235EZ8G-C3WL5-B56YG-SCXM9-6QZAPG3ZC7-7YGPY-FZD3A-FMNF9-ENTJBYTZGN-FYT53-J253L-ZQZS4-YLBN9 打开软件，首先配置代理服务器。 如下图，添加地址127.0.0.1，以及shadowsocks里配置的本地端口，默认为1080，选择socks version 5 配置好后，点击测试，如果显示下图的绿色文字，则表示配置正确。 接下来就要添加规则，来确定哪些软件是走代理的，哪些不用 按如图所示的添加，这里有个default规则，如果default旁边的action里边选择的时proxy socks5…则本机所有软件都会走代理。一般default会选direct，然后把你需要走代理的软件选成proxy socks5… 最后在首页就能看到你各个软件的情况。","path":"2019/01/15/6ae0d0de/","date":"01-15","excerpt":"","tags":[{"name":"proxifier注册码以及配合shadowsocks上网","slug":"proxifier注册码以及配合shadowsocks上网","permalink":"https://Fookdies301.github.io/blog/tags/proxifier注册码以及配合shadowsocks上网/"}]},{"title":"heroku部署应用","text":"` js heroku create “应用名” #创建应用 git init #初始化 heroku git:remote -a “应用名” #连接到应用 git add . git commit -am “make it better” git push heroku master heroku config:set “变量内容” #添加变量 heroku open #打开应用","path":"2019/01/08/502b664d/","date":"01-08","excerpt":"","tags":[{"name":"heroku","slug":"heroku","permalink":"https://Fookdies301.github.io/blog/tags/heroku/"},{"name":"变量","slug":"变量","permalink":"https://Fookdies301.github.io/blog/tags/变量/"}]},{"title":"Markdown + Pandoc","text":"Markdown + Pandoc来源：Markdown+Pandoc，打通写作界的任督二脉！ Markdown+Pandoc，可以把自己的写作内容，变成世界上已有的任何格式的文件，包括很炫的slide，html5。没有人（或者我没看到）总结过这些内容，导致我走了很多弯路才最终打通任督二脉，特此纪念。 了解Markdwon以后，我的写作世界，只有它；看到Pandoc格式转换以后，对生成的slide和pdf羡慕的不行。那时，自己期望以后的写作是这样的：首先用Markdown把自己的想法写下来；其次，通过Pandoc，把写好的Markdown文件，转换成Slide或者PDF。如此而已。 Pandoc，这个不知道怎么发音，google也没找到。好吧，我就读做panda吧，谁让它是国宝。 Pandoc的运行，是在命令行里面。可是，没那么简单，不是任何一个cmd都可以。你必须要下载Pandoc，请参考这里。根据自己的os，选择Windows 或者其他。 安装以后，记得Pandoc的目录是啥，然后再到cmd里面去操作一些失传已久的doc命令，转换到pandoc的路径下。 我个人习惯，是把要转换的文件，比如test.md，放到pandoc的路径下，这样在使用pandoc转换的时候，不用输入太多的路径（尤其是我们很多路径是中文，怕可能有一些问题）。当然，也可以调用其他路径的文件，只要自己觉得舒服。 pandoc，就像linux下的iconv，可以把其他格式的文件，转化成自己想要的格式。具体的格式参考请看这里。 个人常用的有两个格式转换： a：md文件转换成html5 1pandoc -s --mathml -i -t dzslides test.md -o test.html b：md文件转换成pdf 1pandoc -t beamer test.md -o test.pdf 这里强调一点，如果想转成PDF文件，要安装LATEX。推荐安装MiKTex。但是，中文转PDF，因latex支持中文差，转换有问题。对于Latex熟悉的人，可以参考这个，看是否能解决中文转slide pdf的问题。 文件转换完成以后，如果有一些地方不合适，可以调整原始的md文件，再转换一次。等熟练以后，从写，到转换就非常迅速了。 当然，Pandoc还有很多的转换格式，大家可以自己去研究发觉。 关于Pandoc的使用，我没有过多的去研究。只是把自己常用的几个功能熟悉了一下。时间，真的真的很宝贵，不知不觉就从指缝中溜走了。所以，我只能在满足自己需求情况下，去使用pandoc。 期待大家更多的分享！","path":"2019/01/05/13cff3c5/","date":"01-05","excerpt":"","tags":[{"name":"Markdown+Pandoc","slug":"Markdown-Pandoc","permalink":"https://Fookdies301.github.io/blog/tags/Markdown-Pandoc/"}]},{"title":"Markdown + R","text":"Markdown + R来源：Markdown写作浅谈 科技写作与Markdown+R科技写作会碰到什么难题？如果你是纯文科生，写的都是豆瓣小酸文或者诗歌之类的，那么，看完上面这一部分就可以打住了。如果你还有写科技论文的需要，则继续往下看。 科技写作与文艺写作的不同主要有： 公式与图表：相信各位写过科学论文的，都会为数学公式与各类图表的输出头疼不已； 格式转换：pdf是通用的，但是有时偏偏需要LaTeX原始格式或者Word原始格式； 参考文献：投稿给不同刊物，往往参考文献要根据对方的格式来调整。 解决这些难题，LaTeX是国际科学界，尤其是偏数理类的学科的主流方案之一。当然，因为中国盗版office的流行，导致国内科技论文Word更盛行，则是另一码事。Word因为近些年在参考文献协作软件、数学公式方面的发力，也逐步成为科技界认同的论文投递标准之一。 提到LaTeX的人们，常常有两种口气。一种是当做大神来敬仰的，当语言、软件变为传奇，路人皆知它的诞生历史时，于是，众多如你我这类文科生，只有抬头仰望的份了。另一类，则是不屑的口气，LaTeX那么好学，你怎么都学不会！国际期刊都是用这个写的，你别混了。。。 于是，我等文科生只好在被鄙视的眼光之下，快快走过LaTeX。。。但是，LaTeX真的符合人们写作习惯吗？请记住当时的历史。那时的计算机，所见即所得，并不像今天这么流行。那时的计算机，处理能力也不像今天这么强大。更别提什么脚本语言了。翻出上一份LaTeX文档所用的APA模版，大家就知道它有多么坑爹了。。。 使用Lyx，好看多了。问题是，它有坑吗？你跳过吗？ Markdown+R如何解决的？每位试图解决LaTeX的不便，又试图保留它的优点的人们，都走上了一条不归路。 直到有一天，极其熟悉LaTeX，也熟悉Markdown的yihui同学，意识到了，LaTeX它可以作为最终格式生成。但是，我们中间的写作过程，完全可以用Markdown这么简单明了的语法来写，我们真正需要的，就是一堆数学公式、图表与参考文献而已。前2者，恰恰是R的强项。后者，则留给开源社区，下一步解决。（可参考线索1、线索2、线索 3 ) 于是，在他的新作R包knitr中，果断提供了Markdown支持。并说服R社区主流编辑器厂家，开源软件RStudio 提供 Markdown支持，从而使得Rmd这种新格式开始流行。我们有幸看到这个重要格式的诞生，国人的贡献如此重要。 Rmd 简介Rmd 格式更详细的描述，读 yihui 的文档：自动化报告 在这里，让我简单说明，如何最快上手Rmd格式。 安装并配置RStudio下载 RStudio 之后，打开配置选项，如下图所示： 然后，进行如下配置： 新建Rmd文档新建一个Rmd文档，如下图所示： 然后，默认会出来一些内容。如果你对Markdown语法有不熟悉的地方，点击MD按钮。写完之后，直接点击： Knit HTML 按钮即可发布。MD按钮与Knit Html按钮的位置如下图所示： 就会预览成功。你也可以点击保存，生成相应的图片、Markdown文档。 是的，你要的一切图片都有了！这就是 yihui 所推崇的 文学性编程、可重复研究概念的神奇。 更重要的是，还保留了对LaTeX的无缝兼容。比如，大家可以敲下这段文字： 其中，这一段， 123$$latexf(x;\\mu,\\sigma^2) = \\frac&#123;1&#125;&#123;\\sigma\\sqrt&#123;2\\pi&#125;&#125; e^&#123; -\\frac&#123;1&#125;&#123;2&#125;\\left(\\frac&#123;x-\\mu&#125;&#123;\\sigma&#125;\\right)^2 &#125;$$ 就是直接生成LaTeX格式的数学公式！ 没有安装RStudio，或者不熟悉R的朋友，可以在我搭建的一个在线演示APP里面，将上述代码，粘贴上去，然后看看神奇的效果！ 网址是：R Markdown App 效果如下图所示： 这么做，有什么好处呢？让我细数一下： 真正意义上的可重复性研究发表论文或者审核同事的报告，有个最麻烦的事情，你不知道他的步骤或者计算是否有误。现在，代码嵌在报告正文中，或者附录在报告末尾。而你，要做的，仅仅是一键生成。。。 这就是真正意义上的可重复性研究！ 更强大的数学与制图能力既兼容了LaTeX的既有能力，同时，又广泛借助于R自身强大的作图与统计学习能力。 更重要的是，未来，并不是非要用R语言作图。yihui 同学在前文中的描述已经极其清楚了。 当然，还有云计算真正意义上的云计算，尤其是类似于我们这样，中小企业、小型实验室实战使用的小型云计算，不同于各类忽悠的云计算。Markdown+R这种方式是最佳方式之一。上述例子中提到的那个APP，就是搭建在云中。同时提供各类REST接口，可以被Ruby程序调用。 Markdown格式与LaTeX、Word等格式的互转点这里：Pandoc 还有不少有趣的玩法，如Building a beamer presentation with knitr. 如何学习Markdown+R？好了，回到大家最关心的部分。分成两部分，先是如何学习Markdown，其次是如何学习R。 Markdown格式说明 参考：Markdown 更好的学习办法是直接读各类范本文件 更多资源参考V2ex节点 Markdown编辑器 Mac等平台下推荐Mou Windows平台推荐MarkdownPadRStudio可作为写作科技论文与R语言编辑器选择，它是跨平台的 markdown-here借助Chrome插件，将gmai写作窗口变为Markdown在线写作窗口 可以直接在线通过github撰写与提交Markdown文件，github有自动的版本跟踪功能，不用担心写废与找不到以前写的 Windows下的GitHub特别说明 如果碰到git、github等与windows不兼容的现象，不建议折腾，而是直接在线提交即可。 GitHub最近发行了Windows版本，下载地址在这里 我的老文：如何高效利用github 如何学习RRstudio Getting_Started_with_RStudio.pdf R语言入门读物 R for SAS and SPSS Users.pdf ： 适合有SPSS基础的朋友 Analysis of Questionnaire Data with R ： 适合处理问卷数据的文科生或社会科学类 更多参考我的豆列：技术派心理学 示范文艺青年文艺青年看这里， 為什麼文科生也該用markdown寫作? 为什么作家应该用 Markdown 保存自己的文稿 科学青年可以看这里：如何学习科学：开放科学工具箱 点击 RAW 即可看到原始格式。这是一个长文档的示范。另一个示范是作者写的一个在线DEMO： 云中的社会网络分析+Markdown 以及：Markdown+R科技文写作 技术青年 knitr以及各类Google、维基百科。 特别是：pandoc-markdown Primarily Pandoc: Writing in Markdown instead of LaTeX","path":"2019/01/05/f5780708/","date":"01-05","excerpt":"","tags":[{"name":"Markdown + R","slug":"Markdown-R","permalink":"https://Fookdies301.github.io/blog/tags/Markdown-R/"}]},{"title":"Gitbook制作电子书","text":"Markdown + Gitbook使用Gitbook制作电子书Gitbook是一个命令行工具，可以把你的Markdown文件汇集成电子书，并提供PDF等多种格式输出。你可以把Gitbook生成的HTML发布出来，就形成了一个简单的静态网站。Gitbook还有一个同名的平台（gitbook.io），可以发布和销售电子书，并提供了一个Markdown客户端工具（支持Mac、Windows和Linux）帮助写作。以下是我在使用Gitbook中的笔记。 首先Gitbook和Git/Github都没有什么关系。它只是一个build book的工具而已。但它的Git前缀的确引起了许多人的迷惑，起初我认为至少它也是个和Github类似的Git平台吧，但其实没什么关系，你只要懂几条markdown语法，不必理解任何与Git相关的东西就能用Gitbook了，不要为其名字迷惑。 第0步 安装npm（Node Package Manager）。从node.js的官网上下载安装程序，即可完成Node.js和npm的安装。 第1步 通过npm安装Gitbook。 $ npm install gitbook -g 完成后花10分钟阅读下Gitbook的帮助文档。如果你没耐心看手册，那就继续往下读吧 :D 第2步 了解Gitbook的基本规则。 Gitbook需要2个基本文件： README.md SUMMARY.md README.md是关于你的书的介绍，而SUMMARY.md中则包含了书目，即章节结构，它的格式大致是： 1234* [第1章](c1.md) * [第1节](c1s1.md) * [第2节](c1s2.md) * [第2章](c2.md) 剩下的东西就很好理解了，你只需要编写相应章节即可。在编辑完README.md和SUMMARY.md后，你可以运行以下命令： $ gitbook serve -p 8080 . Gitbook首先把你的Markdown文件编译为HTML文件，并根据SUMMARY.md生成书的目录。所有生存的文件都保存在当前目录下的一个名为_book的子目录中。完成这些工作后，Gitbook会作为一个HTTP Server运行，并在8080端口监听HTTP请求。 运行以上命令后，打开浏览器，在地址栏输入：http://localhost:8080即可看到你的书页了。 其中位于左侧书目顶部的Introduction一节就编译自README.md，而书目本身自编译自SUMMARY.md。你要在自己的网站上发布新书，只需把_book目录复制到服务器相应目录即可。至此Gitbook的基本用法就介绍完毕。下面简单讨论下Gitbook的其他应用，包括Gitbook的插件、与Github的融合、Gitbook客户端、Gitbook平台，以及Gitbook的问题。 Gitbook的插件支持 Gitbook可以生成HTML，因此它支持一些外部的JavaScript文件嵌入到HTML中，例如Google统计、Disqus评论系统等。以下以页面中嵌入Disqus评论为例。 首先是安装Gitbook的Disqus插件。 $ npm install gitbook-plugin-disqus 然后建立一个book.json文件，其格式如下： 1&#123; &quot;plugins&quot;: [&quot;disqus&quot;], &quot;pluginsConfig&quot;: &#123; &quot;disqus&quot;: &#123; &quot;shortName&quot;: &quot;NAME-FROM-DISQUS&quot; &#125; &#125; &#125; 把上面的NAME-FROM-DISQUS修改为你在Disqus上的项目名即可。 再次运行命令： $ gitbook serve -p 8080 . 并刷新浏览器，即可看到附加了Disqus评论的页面。 与Github的融合 Gitbook的博客上说Github提供了对Gitbook的特殊支持，但我没有测试。只是依然把源文件保存在Github上，然后用Gitbook去编译。期待Gitbook做的更好。 Gitbook客户端 Gitbook客户端支持Mac、Windows、Linux。我在Mac和Windows简单尝试了这个客户端，总体而言可以用。但也仅仅是可以用而已。你可以在客户端里编辑Markdown文件，并提供一个实时的预览窗口；可以关联到你的Gitbook账户，并把内容同步到gitbook.io，并为你生成PDF等。说句题外话，如果你要Markdown的客户端的话，飞象马克更好用，至少Vim编辑模式你得支持啊。 Gitbook的问题 Gitbook网站的访问速度很慢。可以在生成_book目录后，把其中的HTML文件和gitbook子目录（包含字体和js文件等）复制到自己的网站上。 Gitbook提供的push功能不能用。push.gitbook.io这个地址无法访问，不知是否是临时性服务故障。 Gitbook生成PDF的中文字体极其难看。万分期待改进。话说Gitbook生存的HTML上的中文非常漂亮。 在我的手机上看Gitbook的页面时，会让浏览器挂掉。 使用Gitbook发布电子书上次说到用GitBook制作电子书，侧重在使用gitbook这个命令行工具，今天要说的重点是GitBook这个平台。当你把书放到GitBook上后，可以设置书的价格（每笔交易GitBook抽走20%作为佣金），也可以设置为免费，以及接受捐赠。如果你要收费或接受捐赠，则需要一个PayPal账户。在开始前，我要友情提示一句，在国内访问GitBook的速度很慢，通过VPN访问才好。 第-1步 用git这个源代码管理工具来管理你的Markdown文件。最好有个GitHub账户，这样每次push到GitHub时，GitBook都会自动为你的更新build新的版本（同时生成HTML、PDF、ePUB、MOBI这4个版本）。 第0步 注册一个GitBook帐号。 第1步 在GitBook添加一本书，填写书名等基本信息即可。完成后，GitBook会为你生成一个git仓库，其格式为： https://push.gitbook.io/{author}/{book}.git author即你的GitBook用户名，book即你的书名，如我创建的书的git仓库： https://push.gitbook.io/berlinix/guaidanuniversity.git 这样你可以在编写完Markdown后，通过git push同步到GitBook。 第2步 把你本地的Markdown文件push到GitBook。我发现git push时常失败（服务器返回5xx错误），因此还有一种方法就是把你的GitHub项目与GitBook关联。每次push到GitHub时，会通过GitBook的webhook自动同步到GitBook上。 在Book Setting中简单配置一下即可，如我的配置为：berlinix/gdu （GitHub用户名为berlinix，GitHub仓库名为gdu） 在第一次push后，就可以看到你在GitBook上的电子书了，其访问地址为： http://{author}.gitbooks.io/{book}/ 这是你电子书的主页，从这个页面可以直接打开HTML版本，或下载PDF等电子书版本，一般用户也可以为你的书添加评论。如： http://berlinix.gitbooks.io/guaidanuniversity/ 要直接访问HTML版本，可以通过链接： https://www.gitbook.io/read/book/{author}/{book} 直接访问，如： https://www.gitbook.io/read/book/berlinix/guaidanuniversity 至此，GitBook平台的基本用法就介绍完毕。下面是我的一些使用经验。 个性化域名 HTML版本的URL很复杂，可以使用个性化域名简化之。在域名注册商那里添加一条CNAME记录即可，如： CNAME gdu.berlinix.com www.gitbook.io 300 并把gdu.berlinix.com配置到Book Setting中去，这样可以通过简单的gdu.berlinix.com来取代https://www.gitbook.io/read/book/berlinix/guaidanuniversity。同理，电子书的主页也可设置个性化域名，就不再赘述。 删除电子书 同样是在Book Setting中，可以删除电子书。在电子书列表中没有删除接口。 GitBook电子书封面 可以为电子书添加封面。只需添加2个名为cover.jpg和cover_small.jpg的两个图片即可。官方建议cover.jpg尺寸18002360，cover_small.jpg尺寸200262。花2元即可在淘宝上找个做封面的人为你制造一个简单的封面，做得好就要花更多一些了 :) GitBook帐号头像 似乎只接受Gravatar.com的头像。把Gravatar帐号关联过去即可。Gravatar提供的服务是把你的邮箱和头像关联起来，当你在其他网站注册时就不用每次都上传同一个头像，只需简单与Gravatar帐号关联即可。这样替换头像也方便了，一次替换、处处生效。 访问优化 按GitBook的访问速度，如果真让人访问GitBook上的HTML页面真是自寻死路啊，因此最好是把GitBook编译后的HTML放在自己的网站上。同时，为自己网站的HTML生成Disqus支持。例如你可以访问我放到自己服务器后的页面（用手机访问效果也非常好）： http://www.berlinix.com/gdu/index.html 电子书Bug 上次说到GitBook生成PDF的中文字体非常丑陋，另外还有一个问题，那就是生成的PDF可能是残全不全的。我编译后发现内容只剩一半。我已邮件过去报告这个Bug，还在等回信 :) 总体而言，GitBook还是很好玩，比起其他写作平台而言，要自由、简单，并舒服得多，可以用Vim编辑，支持Markdown语法，用git管理，关联GitHub后每次push后还能自动编译，生成多种电子书格式。如果你的书极为畅销的话，还能获取到捐赠或购买，没有理由不尝试的呀。 注来源： 使用Gitbook制作电子书 使用GitBook平台发布电子书","path":"2019/01/05/5bef2f89/","date":"01-05","excerpt":"","tags":[{"name":"Gitbook","slug":"Gitbook","permalink":"https://Fookdies301.github.io/blog/tags/Gitbook/"},{"name":"Markdown","slug":"Markdown","permalink":"https://Fookdies301.github.io/blog/tags/Markdown/"}]},{"title":"Markdown 基本语法","text":"Markdown 基本语法段落非常自然，一行文字就是一个段落。 比如 1这是一个段落。 会被解释成 1&lt;p&gt;这是一个段落。&lt;/p&gt; 如果你需要另起一段，请在两个段落之间隔一个空行。 123这是一个段落。这是另一个段落。 会解释成 12&lt;p&gt;这是一个段落&lt;p&gt;&lt;p&gt;这是另一个段落&lt;/p&gt; 不隔一个空行的换行行为，在一些编辑器中被解释为换行，即插入一个&lt;br /&gt;标签。对与另外一些编辑器，会被解释为插入一个空格。对于后者，若要插入换行标签，请在当前一行的结尾打两个空格。 粗体、斜体可以使用星号*或下划线_指定粗体或者斜体。 1234*这是斜体*_这也是斜体_**这是粗体*****这是粗体+斜体*** 会被解释成 1234&lt;em&gt;这是斜体&lt;/em&gt;&lt;em&gt;这也是斜体&lt;/em&gt;&lt;strong&gt;这是粗体&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;这是粗体+斜体&lt;/strong&gt;&lt;/em&gt; 删除线一部分编辑器支持删除线，它不是经典markdown中的要素。用波浪线~定义删除线。 1~~就像这样~~ 会被解释成 1&lt;strike&gt;就像这样&lt;/strike&gt; 标题markdown总支持1~6六级标题，通过在一行之前加上不同数量的井号来表示。 123456789# 这是 H1 ### 这是 H2 ##### 这是 H3 ###...###### 这是 H6 ###### 行尾可以加上任意数量的井号字符，这些字符不会算作标题内容。通常会加上相等数量的字符以保持对称。 此外，H1和H2也可以采用在文本下方添加底线来实现，比如： 12345这是 H1=======这是 H2------- 引用通过在行首加上大于号&gt;来添加引用格式。 123456&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisseid sem consectetuer libero luctus adipiscing. 引用可以嵌套： 12345&gt; This is the first level of quoting.&gt;&gt; &gt; This is nested blockquote.&gt;&gt; Back to the first level. 也可以嵌套其他格式： 12345678&gt; ## 这是一个标题。&gt;&gt; 1. 这是第一行列表项。&gt; 2. 这是第二行列表项。&gt;&gt; 给出一些例子代码：&gt;&gt; return shell_exec(&quot;echo $input | $markdown_script&quot;); 列表无序列表使用星号、加号或是减号作为列表标记： 123* Red* Green* Blue 等同于 123+ Red+ Green+ Blue 和 123- Red- Green- Blue 有序列表则使用数字接着一个英文句点： 1231. Bird2. McHale3. Parish 数字并不会影响输出的 HTML 结果，也就是说上面的例子等同于： 1231. Bird1. McHale1. Parish 内联代码用反引号`来标记内联代码，它们会解释成&lt;code&gt;标签。如果代码的内容中有反引号，请用两个反引号包裹。代码中的&amp;、&lt;、&gt;符号都会自动转义，请放心使用。 代码区域有两种方式标记代码区域，原生风格是行首缩进四个空格。 123这是一个普通段落： 这是一个代码区块。 会被解释成 1234&lt;p&gt;这是一个普通段落：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;这是一个代码区块。&lt;/code&gt;&lt;/pre&gt; 除了行首的4个空格会被移出，其它不变。像内联代码一样，上述三种符号也会被转义。但在代码段中，星号之类的markdown标记符号则不会解析。 还有一种是github的风格，代码段的前后用三个反引号独占一行来标记。 目前主流编辑器都支持这种风格。 分隔线你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线： 12345* * *********- - ---------------------------------------- 链接12[an example](http://example.com/)[an example](http://example.com/ &quot;Optional Title&quot;) 会被解释为 12&lt;a href=&apos;http://example.com/&apos;&gt;an example&lt;/a&gt;&lt;a href=&apos;http://example.com/&apos; title=&quot;Optional Title&quot;&gt;an example&lt;/a&gt; 除了上面的行内式，也可以使用参考式： 1[an example][id] 然后在任意空白位置定义： 1[id]: http://example.com/ &quot;Optional Title&quot; 图像12![Alt text](/path/to/img.jpg)![Alt text](/path/to/img.jpg &quot;Optional Title&quot;) 会被解释为 12&lt;img src=&apos;/path/to/img.jpg&apos; alt=&apos;Alt text&apos; /&gt;&lt;img src=&apos;/path/to/img.jpg&apos; alt=&apos;Alt text&apos; title=&apos;Optional Title&apos; /&gt; 同样，图像也有类似的参考式语法。 自动链接如果链接的地址和名字重复，可以用尖括号语法将其简化。 1&lt;http://example.com/&gt; 就相当于 1[http://example.com/](http://example.com/) 切记，大多数编辑器都会自动将符合url规则的东西视为链接，并且解释成链接。很多时候作者由于疏忽等缘故，链接和后面的中文之间缺少空格，导致链接不正常。所以我建议，链接要么加上尖括号，要么两端加上空格。 转义markdown支持在以下字符前面插入反斜杠 123456789101112\\ 反斜线` 反引号* 星号_ 底线&#123;&#125; 花括号[] 方括号() 括弧# 井字号+ 加号- 减号. 英文句点! 惊叹号 插入之后，将不再解析这些字符，而是原样输出。 表格表格是github风格独有的语法，但近年来渐渐被大多数编辑器支持。 12345| Item | Value | Qty || :------- | ----: | :---: || Computer | $1600 | 5 || Phone | $12 | 12 || Pipe | $1 | 234 | 会被解释成 123456789101112131415161718192021222324&lt;table&gt;&lt;thead&gt;&lt;tr&gt; &lt;th align=&quot;left&quot;&gt;Item&lt;/th&gt; &lt;th align=&quot;right&quot;&gt;Value&lt;/th&gt; &lt;th align=&quot;center&quot;&gt;Qty&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt; &lt;td align=&quot;left&quot;&gt;Computer&lt;/td&gt; &lt;td align=&quot;right&quot;&gt;$1600&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;5&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt; &lt;td align=&quot;left&quot;&gt;Phone&lt;/td&gt; &lt;td align=&quot;right&quot;&gt;$12&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;12&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt; &lt;td align=&quot;left&quot;&gt;Pipe&lt;/td&gt; &lt;td align=&quot;right&quot;&gt;$1&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;234&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt; 要注意第二行的冒号决定了居左居右还是居中，如果你不加冒号，默认是居左的。 另外可以把第一行去掉，做成没有表头的表格，但第二行始终是要有的。 内联 HTMLmarkdown 的语法简洁，但有其局限性，所以特意保留了内联html这种方式。任何html标签及其内容，都会原样输出到结果中。也就是说，标签中的星号等作为markdown结构的符号，以及构成html标签和实体的符号，都不会做任何转义。 Markdown 高级语法只有少数编辑器支持，使用前请先确认。 定义列表1234Term 1Term 2: Definition A: Definition B 会被编译成 123456&lt;dl&gt;&lt;dd&gt;Term 1&lt;/dd&gt;&lt;dd&gt;Term 2&lt;/dd&gt;&lt;dt&gt;Definition A&lt;dt&gt;&lt;dt&gt;Definition A&lt;dt&gt;&lt;/dl&gt; 目录通过[TOC]标记来插入目录。 在编辑器不支持[TOC]标记的情况下可以使用添加id的方法构建目录。 1234567### Directory* [1.Content one](#chapter1)* [2.Content two](#chapter2)### &lt;span id=&quot;chapter1&quot;&gt;1.Content one&lt;/span&gt;### &lt;span id=&quot;chapter2&quot;&gt;2.Content two&lt;/span&gt; TeX公式内联的TeX公式使用一个美元符号标记。 1$\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$ 会被编译成 TeX公式块用独占一行的两个美元符号来标记。 123$$\\Gamma(z) = \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,.$$ 会被编译成 如果你的编辑器不支持这个功能，可以手动解决。首先引入mathjax脚本： 1&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML&quot;&gt;&lt;/script&gt; 之后，在需要插入公式的地方使用&lt;script&gt;标签包裹公式： 12345&lt;script type=&quot;math/tex&quot;&gt;\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;\\Gamma(z) = \\int_0^\\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\\,.&lt;/script&gt; TeX的语法参考请见这里。 UML图可以像这样来画uml时序图： 这是uml流程图： 时序图的语法请见这里。流程图的语法请见这里。 markdown部分语法技巧1 -字体-换行-缩进1.换行：12方法1: 连续两个以上空格+回车方法2：使用html语言换行标签：&lt;br&gt; 2.首行缩进两个字符：(每个表示一个空格，连续使用两个即可）123&amp;ensp; 半角的空格(&amp;#8194;)&amp;emsp; 全角的空格(&amp;#8195;)&amp;nbsp; 不断行的空格(&amp;#160;) 3.字体、字号与颜色:&emsp;&emsp;Markdown是一种可以使用普通文本编辑器编写的标记语言，通过类似HTML的标记语法，它可以使普通文本内容具有一定的格式。但是它本身是不支持修改字体、字号与颜色等功能的！&emsp;&emsp;CSDN-markdown编辑器是其衍生版本，扩展了Markdown的功能（如表格、脚注、内嵌HTML等等）！对，就是内嵌HTML，接下来要讲的功能就需要使用内嵌HTML的方法来实现。字体，字号和颜色编辑如下代码 12345678&lt;font face=\"黑体\"&gt;我是黑体字&lt;/font&gt;&lt;font face=\"微软雅黑\"&gt;我是微软雅黑&lt;/font&gt;&lt;font face=\"STCAIYUN\"&gt;我是华文彩云&lt;/font&gt;&lt;font color=#0099ff size=7 face=\"黑体\"&gt;color=#0099ff size=72 face=\"黑体\"&lt;/font&gt;&lt;font color=#00ffff size=72&gt;color=#00ffff&lt;/font&gt;&lt;font color=gray size=72&gt;color=gray&lt;/font&gt; Size：规定文本的尺寸大小。可能的值：从 1 到 7 的数字。浏览器默认值是 3 具体颜色分类及标记请参照：各种颜色4.背景色： Markdown本身不支持背景色设置，需要采用内置html的方式实现：借助 table, tr, td 等表格标签的 bgcolor 属性来实现背景色的功能。举例如下： 12 背景色 1&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#FF4500&gt;这里的背景色是：OrangeRed， 十六进制颜色值：#FF4500， rgb(255, 69, 0)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; 呈现效果如下这里的背景色是：OrangeRed， 十六进制颜色值：#FF4500， rgb(255, 69, 0) 12 5.分割线：你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线6.链接：链接文字都是用 [方括号] 来标记,在方块括号后面紧接着圆括号并插入网址链接即可:可参照This link has no title attribute.7.代码块：&emsp;&emsp;1.代码块：用2个以上TAB键起始的段落，会被认为是代码块（效果如下）：struct { int year; int month; int day; }bdate; &emsp;&emsp;2.如果在一个行内需要引用代码，只要用反引号`引起来就好(Esc健）&emsp;&emsp;3.代码块与语法高亮：在需要高亮的代码块的前一行及后一行使用三个反引号“`”，同时第一行反引号后面表面代码块所使用的语言8.使用LaTex数学公式:&emsp;&emsp;1.行内公式：使用两个”$”符号引用公式: $公式$&emsp;&emsp;2.行间公式：使用两对“$$”符号引用公式： $$公式$$字体、字号与颜色123456&lt;font face=\"黑体\"&gt;我是黑体字&lt;/font&gt;&lt;font face=\"微软雅黑\"&gt;我是微软雅黑&lt;/font&gt;&lt;font face=\"STCAIYUN\"&gt;我是华文彩云&lt;/font&gt;&lt;font color=#0099ff size=7 face=\"黑体\"&gt;color=#0099ff size=72 face=\"黑体\"&lt;/font&gt;&lt;font color=#00ffff size=72&gt;color=#00ffff&lt;/font&gt;&lt;font color=gray size=72&gt;color=gray&lt;/font&gt; Size：规定文本的尺寸大小。可能的值：从 1 到 7 的数字。浏览器默认值是 3。呈现效果我是黑体字我是微软雅黑我是华文彩云color=#0099ff size=72 face=”黑体”color=#00ffffcolor=gray 颜色名列表 颜色名 十六进制颜色值 颜色 AliceBlue #F0F8FF rgb(240, 248, 255) AntiqueWhite #FAEBD7 rgb(250, 235, 215) Aqua #00FFFF rgb(0, 255, 255) Aquamarine #7FFFD4 rgb(127, 255, 212) Azure #F0FFFF rgb(240, 255, 255) Beige #F5F5DC rgb(245, 245, 220) Bisque #FFE4C4 rgb(255, 228, 196) Black #000000 rgb(0, 0, 0) BlanchedAlmond #FFEBCD rgb(255, 235, 205) Blue #0000FF rgb(0, 0, 255) BlueViolet #8A2BE2 rgb(138, 43, 226) Brown #A52A2A rgb(165, 42, 42) BurlyWood #DEB887 rgb(222, 184, 135) CadetBlue #5F9EA0 rgb(95, 158, 160) Chartreuse #7FFF00 rgb(127, 255, 0) Chocolate #D2691E rgb(210, 105, 30) Coral #FF7F50 rgb(255, 127, 80) CornflowerBlue #6495ED rgb(100, 149, 237) Cornsilk #FFF8DC rgb(255, 248, 220) Crimson #DC143C rgb(220, 20, 60) Cyan #00FFFF rgb(0, 255, 255) DarkBlue #00008B rgb(0, 0, 139) DarkCyan #008B8B rgb(0, 139, 139) DarkGoldenRod #B8860B rgb(184, 134, 11) DarkGray #A9A9A9 rgb(169, 169, 169) DarkGreen #006400 rgb(0, 100, 0) DarkKhaki #BDB76B rgb(189, 183, 107) DarkMagenta #8B008B rgb(139, 0, 139) DarkOliveGreen #556B2F rgb(85, 107, 47) Darkorange #FF8C00 rgb(255, 140, 0) DarkOrchid #9932CC rgb(153, 50, 204) DarkRed #8B0000 rgb(139, 0, 0) DarkSalmon #E9967A rgb(233, 150, 122) DarkSeaGreen #8FBC8F rgb(143, 188, 143) DarkSlateBlue #483D8B rgb(72, 61, 139) DarkSlateGray #2F4F4F rgb(47, 79, 79) DarkTurquoise #00CED1 rgb(0, 206, 209) DarkViolet #9400D3 rgb(148, 0, 211) DeepPink #FF1493 rgb(255, 20, 147) DeepSkyBlue #00BFFF rgb(0, 191, 255) DimGray #696969 rgb(105, 105, 105) DodgerBlue #1E90FF rgb(30, 144, 255) Feldspar #D19275 rgb(209, 146, 117) FireBrick #B22222 rgb(178, 34, 34) FloralWhite #FFFAF0 rgb(255, 250, 240) ForestGreen #228B22 rgb(34, 139, 34) Fuchsia #FF00FF rgb(255, 0, 255) Gainsboro #DCDCDC rgb(220, 220, 220) GhostWhite #F8F8FF rgb(248, 248, 255) Gold #FFD700 rgb(255, 215, 0) GoldenRod #DAA520 rgb(218, 165, 32) Gray #808080 rgb(128, 128, 128) Green #008000 rgb(0, 128, 0) GreenYellow #ADFF2F rgb(173, 255, 47) HoneyDew #F0FFF0 rgb(240, 255, 240) HotPink #FF69B4 rgb(255, 105, 180) IndianRed #CD5C5C rgb(205, 92, 92) Indigo #4B0082 rgb(75, 0, 130) Ivory #FFFFF0 rgb(255, 255, 240) Khaki #F0E68C rgb(240, 230, 140) Lavender #E6E6FA rgb(230, 230, 250) LavenderBlush #FFF0F5 rgb(255, 240, 245) LawnGreen #7CFC00 rgb(124, 252, 0) LemonChiffon #FFFACD rgb(255, 250, 205) LightBlue #ADD8E6 rgb(173, 216, 230) LightCoral #F08080 rgb(240, 128, 128) LightCyan #E0FFFF rgb(224, 255, 255) LightGoldenRodYellow #FAFAD2 rgb(250, 250, 210) LightGrey #D3D3D3 rgb(211, 211, 211) LightGreen #90EE90 rgb(144, 238, 144) LightPink #FFB6C1 rgb(255, 182, 193) LightSalmon #FFA07A rgb(255, 160, 122) LightSeaGreen #20B2AA rgb(32, 178, 170) LightSkyBlue #87CEFA rgb(135, 206, 250) LightSlateBlue #8470FF rgb(132, 112, 255) LightSlateGray #778899 rgb(119, 136, 153) LightSteelBlue #B0C4DE rgb(176, 196, 222) LightYellow #FFFFE0 rgb(255, 255, 224) Lime #00FF00 rgb(0, 255, 0) LimeGreen #32CD32 rgb(50, 205, 50) Linen #FAF0E6 rgb(250, 240, 230) Magenta #FF00FF rgb(255, 0, 255) Maroon #800000 rgb(128, 0, 0) MediumAquaMarine #66CDAA rgb(102, 205, 170) MediumBlue #0000CD rgb(0, 0, 205) MediumOrchid #BA55D3 rgb(186, 85, 211) MediumPurple #9370D8 rgb(147, 112, 216) MediumSeaGreen #3CB371 rgb(60, 179, 113) MediumSlateBlue #7B68EE rgb(123, 104, 238) MediumSpringGreen #00FA9A rgb(0, 250, 154) MediumTurquoise #48D1CC rgb(72, 209, 204) MediumVioletRed #C71585 rgb(199, 21, 133) MidnightBlue #191970 rgb(25, 25, 112) MintCream #F5FFFA rgb(245, 255, 250) MistyRose #FFE4E1 rgb(255, 228, 225) Moccasin #FFE4B5 rgb(255, 228, 181) NavajoWhite #FFDEAD rgb(255, 222, 173) Navy #000080 rgb(0, 0, 128) OldLace #FDF5E6 rgb(253, 245, 230) Olive #808000 rgb(128, 128, 0) OliveDrab #6B8E23 rgb(107, 142, 35) Orange #FFA500 rgb(255, 165, 0) OrangeRed #FF4500 rgb(255, 69, 0) Orchid #DA70D6 rgb(218, 112, 214) PaleGoldenRod #EEE8AA rgb(238, 232, 170) PaleGreen #98FB98 rgb(152, 251, 152) PaleTurquoise #AFEEEE rgb(175, 238, 238) PaleVioletRed #D87093 rgb(216, 112, 147) PapayaWhip #FFEFD5 rgb(255, 239, 213) PeachPuff #FFDAB9 rgb(255, 218, 185) Peru #CD853F rgb(205, 133, 63) Pink #FFC0CB rgb(255, 192, 203) Plum #DDA0DD rgb(221, 160, 221) PowderBlue #B0E0E6 rgb(176, 224, 230) Purple #800080 rgb(128, 0, 128) Red #FF0000 rgb(255, 0, 0) RosyBrown #BC8F8F rgb(188, 143, 143) RoyalBlue #4169E1 rgb(65, 105, 225) SaddleBrown #8B4513 rgb(139, 69, 19) Salmon #FA8072 rgb(250, 128, 114) SandyBrown #F4A460 rgb(244, 164, 96) SeaGreen #2E8B57 rgb(46, 139, 87) SeaShell #FFF5EE rgb(255, 245, 238) Sienna #A0522D rgb(160, 82, 45) Silver #C0C0C0 rgb(192, 192, 192) SkyBlue #87CEEB rgb(135, 206, 235) SlateBlue #6A5ACD rgb(106, 90, 205) SlateGray #708090 rgb(112, 128, 144) Snow #FFFAFA rgb(255, 250, 250) SpringGreen #00FF7F rgb(0, 255, 127) SteelBlue #4682B4 rgb(70, 130, 180) Tan #D2B48C rgb(210, 180, 140) Teal #008080 rgb(0, 128, 128) Thistle #D8BFD8 rgb(216, 191, 216) Tomato #FF6347 rgb(255, 99, 71) Turquoise #40E0D0 rgb(64, 224, 208) Violet #EE82EE rgb(238, 130, 238) VioletRed #D02090 rgb(208, 32, 144) Wheat #F5DEB3 rgb(245, 222, 179) White #FFFFFF rgb(255, 255, 255) WhiteSmoke #F5F5F5 rgb(245, 245, 245) Yellow #FFFF00 rgb(255, 255, 0) YellowGreen #9ACD32 rgb(154, 205, 50)","path":"2019/01/05/7894e390/","date":"01-05","excerpt":"","tags":[{"name":"Markdown语法","slug":"Markdown语法","permalink":"https://Fookdies301.github.io/blog/tags/Markdown语法/"}]},{"title":"git命令使用","text":"使用Git命令把本地项目上传到Github托管&nbsp;&nbsp;&nbsp;&nbsp;我在这篇文章中将会详细实现如何把一个你在本地写好的项目（或者正在写的项目）上传到Github进行托管或者多人合作。具体步骤如下：（1）首先在Github上新建一个repository，我命名为NewsClient，其他的根据自己的需求填写即可（2）创建完成后，注意到右下角的项目URL，复制一下，以后会用到(3) 然后我在本地有一个项目，名称为News，终端进入我的项目目录(4) 执行命令：git init该命令是在你的项目目录下初始化一个repository，执行成功后，会在你的目录下生成一个.git的隐藏文件。(5) 执行命令：git add .注意该命令后面有一个“.”,小点。表示把该目录下的所有文件加入到本地暂存区中。执行成功后不会有任何提示(6) 执行命令：git status该命令会把你本地工作区和暂存区的版本进行比较，查看当前的状态。我下面的状态是已经把所有文件加入到了暂存区中，但是还没有提交到本地历史区。（可跳过）(7) 执行命令：git commit -m “这里是注释。。。”该命令会把本地暂存区中的文件提交到本地历史区，注意只有在本地历史区中的内容才能提交到github。执行该命令后，我们所有的文件都只是在本地。没有github任何关系。git commit -m “Initial commit”(8) 执行命令：git remote add origin https://github.com/username/repository.gitgit remote add origin git@github.com:username/repository.git该命令是把本地历史区中的文件添加到github服务器的暂存区中。这一步是本地和远程服务器建立联系的一步。执行成功后不会显示任何结果(9) 执行命令：git pull origin master该命令是先把github上的文件拉下来，注意在每次提交之前要首先进行pull，这是防止冲突。(10) 执行命令：git push -u origin master这一步是真正向github提交，执行完成后，github上的repository就有和你本地一样的代码文件了。初次提交是上面的命令，多次为git push origin master","path":"2019/01/05/fb31f1f7/","date":"01-05","excerpt":"","tags":[{"name":"git","slug":"git","permalink":"https://Fookdies301.github.io/blog/tags/git/"},{"name":"命令","slug":"命令","permalink":"https://Fookdies301.github.io/blog/tags/命令/"}]},{"title":"MarkdownPad2安装与破解","text":"MarkdownPad2安装与破解虽然现在有很多厂商推出了Markdown书写平台，要么不能本地上传图片，要么不能免费使用，要么不能离线操作，其实我喜欢就是MarkdownPad的离线操作，同时还可以修改css样式改变Markdown的显示样式。MarkdownPad安装包下载 点击Enter Key 进入输入邮箱和License keyEmail address :1Soar360@live.com License key :1GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ== 改成中文 如果在使用过程，出现HTML渲染组件出错，这个问题一般多见于win8或者win10。错误的表现形式即：不能实时预览Markdown生成的HTML页面。 解决该问题只需安装Awesomium 1.6.6 SDK.即可，点击下载Awesomium 1.6.6 SDK","path":"2019/01/05/671ebdfb/","date":"01-05","excerpt":"","tags":[{"name":"MarkdownPad2安装","slug":"MarkdownPad2安装","permalink":"https://Fookdies301.github.io/blog/tags/MarkdownPad2安装/"}]},{"title":"New Document","text":"Welcome to MarkdownPad 2MarkdownPad is a full-featured Markdown editor for Windows. Built exclusively for MarkdownEnjoy first-class Markdown support with easy access to Markdown syntax and convenient keyboard shortcuts. Give them a try: Bold (Ctrl+B) and Italic (Ctrl+I) Quotes (Ctrl+Q) Code blocks (Ctrl+K) Headings 1, 2, 3 (Ctrl+1, Ctrl+2, Ctrl+3) Lists (Ctrl+U and Ctrl+Shift+O) See your changes instantly with LivePreviewDon’t guess if your hyperlink syntax is correct; LivePreview will show you exactly what your document looks like every time you press a key. Make it your ownFonts, color schemes, layouts and stylesheets are all 100% customizable so you can turn MarkdownPad into your perfect editor. A robust editor for advanced Markdown usersMarkdownPad supports multiple Markdown processing engines, including standard Markdown, Markdown Extra (with Table support) and GitHub Flavored Markdown. With a tabbed document interface, PDF export, a built-in image uploader, session management, spell check, auto-save, syntax highlighting and a built-in CSS management interface, there’s no limit to what you can do with MarkdownPad.","path":"2019/01/05/515db3f0/","date":"01-05","excerpt":"","tags":[{"name":"引导","slug":"引导","permalink":"https://Fookdies301.github.io/blog/tags/引导/"}]},{"title":"MarkdownPad2 Github在线报错","text":"解决方案：在您的注册表中进行以下更改，它应该工作：1.）.NET Framework强大的加密注册表项12345[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319]\"SchUseStrongCrypto\"=dword:00000001[HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\.NETFramework\\v4.0.30319]\"SchUseStrongCrypto\"=dword:00000001 2.）安全通道（Schannel）TLS 1.2注册表项123456789[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2][HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Client]\"DisabledByDefault\"=dword:00000000\"Enabled\"=dword:00000001[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL\\Protocols\\TLS 1.2\\Server]\"DisabledByDefault\"=dword:00000000\"Enabled\"=dword:00000001 参考：1. GFM在线模式SSL / TLS安全通道中止2. MarkdownPad2不能用Github在线样式渲染3. asp.net - .NET Framework 4.0中的TLS 1.2 - Stack Overflow4. 在Office Online Server中启用TLS 1.1和TLS 1.2支持 Microsoft Docs5. 传输层安全性（TLS）注册表设置| Microsoft Docs","path":"2019/01/05/3fd15368/","date":"01-05","excerpt":"","tags":[{"name":"MarkdownPad2在线报错","slug":"MarkdownPad2在线报错","permalink":"https://Fookdies301.github.io/blog/tags/MarkdownPad2在线报错/"}]},{"title":"环境变量","text":"环境变量配置我安装过一些应用，其中部分要配置环境变量才能运行。 需要环境变量的应用：wget,heroku,git,node.js,hexo;其中git,nide.js会自动配置环境变量，其他不会 hexo环境变量配置wget环境变量配置heroku环境变量配置node.js环境变量配置","path":"2019/01/02/b916a8dc/","date":"01-02","excerpt":"","tags":[{"name":"环境变量","slug":"环境变量","permalink":"https://Fookdies301.github.io/blog/tags/环境变量/"}]},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","path":"2019/01/02/4a17b156/","date":"01-02","excerpt":"","tags":[]}]}